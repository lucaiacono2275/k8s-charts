suite: configmap test suite
templates:
  - configMap.yaml
tests:
  - it: should not generate configMap
    values: 
      - ./values/values-test-cm-disabled.yaml
    asserts:
      - hasDocuments:
          count: 0
  - it: should not generate configMap
    values: 
      - ./values/values-test-cm-existing.yaml
    asserts:
      - hasDocuments:
          count: 0
  - it: should generate a configMap
    release:
      name: myrelease
    values: 
      - ./values/values-test-cm.yaml
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: metadata.name
          value: "myrelease-lldap-cm"
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: "lldap"
      - equal:
          path: metadata.labels["app.kubernetes.io/instance"]
          value: "myrelease"
      - equal:
          path: metadata.labels["app.kubernetes.io/version"]
          value: "v0.5.0"
      - equal:
          path: metadata.annotations.myannotation
          value: myvalue
      - equal:
          path: data.LLDAP_SMTP_OPTIONS__ENABLED
          value: "false"
      - notExists:
          path: data.LLDAP_SMTP_OPTIONS__ENABLEDSECRET
  - it: should generate a configMap with empty data
    release:
      name: myrelease
    values: 
      - ./values/values-test-cm-empty.yaml
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: metadata.name
          value: "myrelease-lldap-cm"
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: "lldap"
      - equal:
          path: metadata.labels["app.kubernetes.io/instance"]
          value: "myrelease"
      - equal:
          path: metadata.labels["app.kubernetes.io/version"]
          value: "v0.5.0"
      - equal:
          path: metadata.annotations.myannotation
          value: myvalue
      - isNullOrEmpty:
          path: data
  - it: should generate a configMap with ldaps options
    release:
      name: myrelease
    set:
      ldaps:
        enabled: true
    asserts:
      - equal:
          path: data.LLDAP_LDAPS_OPTIONS__CERT_FILE
          value: /certs/cert.pem
      - equal:
          path: data.LLDAP_LDAPS_OPTIONS__KEY_FILE
          value: /certs/key.pem
  - it: should generate a configMap with a file
    release:
      name: myrelease
    set:
      configMap:
        mountAsFile: true
    asserts:
      - equal:
          path: data["lldap_config.toml"]
          value: |-
            database_url = sqlite:///data/users.db?mode=rwc
            [smtp_options]
            enabled = false
            port = 587
            server = smtp.mail.svc.cluster.local
            [ldaps_options]
            cert_file = /certs/cert.pem
            enabled = false
            key_file = /certs/key.pem
            port = 6360