suite: Vault Job Chart Tests
templates:
  - job.yaml
tests:
  - it: should create a Job with initContainer when waitForVault is enabled
    set:
      waitForVault:
        enabled: true
        podName: vault-0
        timeoutSeconds: 300
      waitForSecret:
        enabled: false
    asserts:
      - lengthEqual:
          path: spec.template.spec.initContainers
          count: 2
      - matchRegex:
          path: spec.template.spec.initContainers[0].command[2]
          pattern: "kubectl wait --for=condition=Ready pod/vault-0"

  - it: should create a Job with initContainer when waitForSecret is enabled
    set:
      waitForSecret:
        enabled: true
        timeoutSeconds: 300
      waitForVault:
        enabled: false
    asserts:
      - lengthEqual:
          path: spec.template.spec.initContainers
          count: 2
      - matchRegex:
          path: spec.template.spec.initContainers[0].command[2]
          pattern: "kubectl wait --for=create secret/vault-unseal-keys"


  - it: should mount NFS volume when nfs is enabled
    set:
      waitForSecret.enabled: false
      waitForVault.enabled: false
      scriptDir: "/myscript"
      scriptFile: "myscript.sh"
      nfs:
        enabled: true
        server: nfs.example.local
        path: /exports/vault-scripts
    asserts:
      - contains:
          path: spec.template.spec.volumes
          content:
            name: nfs-volume
            persistentVolumeClaim:
              claimName: vault-config-job-nfs-pvc
      - contains:
          path: spec.template.spec.initContainers[0].volumeMounts
          any: true
          content:
            name: nfs-volume
            mountPath: /myscript


  - it: should pass VAULT_TOKEN as env var from secret
    set:
      vault.rootTokenSecret.name: vault-unseal-keys
      vault.rootTokenSecret.key: vault-root
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: VAULT_TOKEN
            valueFrom:
              secretKeyRef:
                name: vault-unseal-keys
                key: vault-root


  - it: should use the correct ServiceAccount
    set:
      jobName: vault-config-job
    asserts:
      - equal:
          path: spec.template.spec.serviceAccountName
          value: vault-config-job-sa

  - it: should fallback to ConfigMap volume when NFS is disabled
    set:
      waitForSecret.enabled: false
      waitForVault.enabled: false    
      nfs.enabled: false
      scriptDir: "/myscripts"
      configMap.name: vault-config-job-cm
    asserts:
      - contains:
          path: spec.template.spec.volumes
          content:
            name: script-volume
            configMap:
              name: vault-config-job-cm
      - contains:
          path: spec.template.spec.initContainers[0].volumeMounts
          any: true
          content:
            name: script-volume
            mountPath: /myscripts

  - it: should set restartPolicy to Never
    asserts:
      - equal:
          path: spec.template.spec.restartPolicy
          value: Never

  - it: should set backoffLimit to 1
    asserts:
      - equal:
          path: spec.backoffLimit
          value: 1

  - it: should name the Job correctly
    set:
      jobName: vault-config-job
    asserts:
      - equal:
          path: metadata.name
          value: vault-config-job          

  - it: should have exactly 1 initContainer
    set:
      waitForVault.enabled: false
      waitForSecret.enabled: false
    asserts:
      - lengthEqual:
          path: spec.template.spec.initContainers
          count: 1


  - it: should have exactly due initContainer
    set:
      waitForVault.enabled: true
      waitForVault.podName: vault-0
      waitForVault.timeoutSeconds: 300
      waitForSecret.enabled: false
    asserts:
      - lengthEqual:
          path: spec.template.spec.initContainers
          count: 2

  - it: should have exactly due initContainer
    set:
      waitForVault.enabled: false
      waitForSecret.enabled: true
      waitForSecret.timeoutSeconds: 300
    asserts:
      - lengthEqual:
          path: spec.template.spec.initContainers
          count: 2

  - it: should have exactly 3 initContainer
    set:
      waitForVault.enabled: true
      waitForVault.podName: vault-0
      waitForVault.timeoutSeconds: 300
      waitForSecret.enabled: true
      waitForSecret.timeoutSeconds: 300
    asserts:
      - lengthEqual:
          path: spec.template.spec.initContainers
          count: 3


  - it: should have correct initContainer name and image
    set:
      waitForVault.enabled: true
    asserts:
      - equal:
          path: spec.template.spec.initContainers[0].name
          value: wait-for-vault
      - equal:
          path: spec.template.spec.initContainers[0].image
          value: bitnami/kubectl:latest


