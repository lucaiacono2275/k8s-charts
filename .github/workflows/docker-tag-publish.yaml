name: Build, Push and Keyless Sign Docker Image

on:
  push:
    tags:
      - '*-v*.*.*'  # es. app1-v1.2.3

jobs:
  build-sign:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Validate tag format
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          if [[ ! "$TAG_NAME" =~ ^.+-v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "‚ùå Tag '$TAG_NAME' non rispetta il formato atteso: <app>-v<versione>"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract metadata from tag
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/placeholder
          tags: |
            type=match,pattern=(.+)-v(\d+\.\d+\.\d+),group=2
            type=raw,value=latest
          flavor: |
            latest=false


      - name: Set image name dynamically
        id: image
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          APP_NAME=$(echo $TAG | cut -d'-' -f1)
          VERSION=$(echo $TAG | cut -d'-' -f2 | sed 's/^v//')
          echo "name=ghcr.io/${{ github.repository_owner }}/$APP_NAME" >> $GITHUB_OUTPUT
          echo "app=$APP_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT          

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v5
        with:
          context: ./images/${{ steps.image.outputs.app }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.image.outputs.name }}:${{ steps.meta.outputs.version }}
            ${{ steps.image.outputs.name }}:latest
          labels: ${{ steps.meta.outputs.labels }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Install crane
        uses: imjasonh/setup-crane@v0.1

      - name: Get image digest
        id: digest
        run: |
          DIGEST=$(crane digest ${{ steps.image.outputs.name }}:${{ steps.meta.outputs.version }})
          echo "digest=$DIGEST" >> $GITHUB_OUTPUT
          DIGEST_LATEST=$(crane digest ${{ steps.image.outputs.name }}:latest)
          echo "digest_latest=$DIGEST" >> $GITHUB_OUTPUT

      - name: Keyless sign Docker image with Cosign
        env:
          COSIGN_EXPERIMENTAL: "true"
          COSIGN_YES: "true"
        run: |
          cosign sign ${{ steps.image.outputs.name }}@${{ steps.digest.outputs.digest }}
          cosign sign ${{ steps.image.outputs.name }}@${{ steps.digest.outputs.digest_latest }}

      - name: Verify signature
        run: |
          cosign verify ${{ steps.image.outputs.name }}@${{ steps.digest.outputs.digest }}
          cosign verify ${{ steps.image.outputs.name }}@${{ steps.digest.outputs.digest_latest }}
