---
name: test-charts

on:
  push:
    branches:
      - develop

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ARGOCD_VERSION: v2.9.3
  CERTMANAGER_VERSION: v1.13.1


jobs:
  test:
    # depending on default permission settings for your org (contents being read-only or read-write for workloads), you will have to add permissions
    # see: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        env:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v4

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          check-latest: true

      - name: Run helm unittest
        run: |
          helm plugin install https://github.com/helm-unittest/helm-unittest.git
          helm unittest charts/*

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Check argocd in the list of changes
        if: steps.list-changed.outputs.changed == 'true'
        id: argocd-changed
        run: |
          echo "Checking for argocd changes..."
          argocd=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }} | grep argocd || true )
          if [[ -n "$argocd" ]]; then
            echo "install=true" >> "$GITHUB_OUTPUT"
            echo "Found argocd changes."
          fi

      - name: Check external-secrets in the list of changes
        if: steps.list-changed.outputs.changed == 'true'
        id: extsecrets-changed
        run: |
          echo "Checking for external-secrets changes..."
          extsecrets=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }} | grep "external-secrets" || true )
          if [[ -n "$extsecrets" ]]; then
            echo "install=true" >> "$GITHUB_OUTPUT"
            echo "Found external-secrets changes."
          fi

      - name: Check cert-manager in the list of changes
        if: steps.list-changed.outputs.changed == 'true'
        id: certmanager-changed
        run: |
          echo "Checking for cert-manager changes..."
          certmanager=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }} | grep "cert-manager" || true)
          if [[ -n "$certmanager" ]]; then
            echo "install=true" >> "$GITHUB_OUTPUT"
            echo "Found cert-manager changes."
          fi

      - name: Check vault operator in the list of changes
        if: steps.list-changed.outputs.changed == 'true'
        id: vault-changed
        run: |
          echo "Checking for vault-operator changes..."
          vault=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }} | grep "vault-operator" || true)
          if [[ -n "$vault" ]]; then
            echo "install=true" >> "$GITHUB_OUTPUT"
            echo "Found vault-operator changes."
          fi

      - name: Check postgres operator in the list of changes
        if: steps.list-changed.outputs.changed == 'true'
        id: postgres-changed
        run: |
          echo "Checking for vault-operator changes..."
          postgres=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }} | grep "postgres" || true)
          if [[ -n "$postgres" ]]; then
            echo "install=true" >> "$GITHUB_OUTPUT"
            echo "Found postgres-operator changes."
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.9.0

      - name: Installs argocd CRDs
        if: steps.argocd-changed.outputs.install == 'true'
        run: |
          kubectl apply -k "https://github.com/argoproj/argo-cd/manifests/crds?ref=$ARGOCD_VERSION"
          kubectl create namespace argocd

      - name: Installs external-secrets CRDs
        if: steps.extsecrets-changed.outputs.install == 'true'
        run: |
          kubectl apply -f https://raw.githubusercontent.com/external-secrets/external-secrets/main/deploy/crds/bundle.yaml 

      - name: Installs cert-manager CRDs
        if: steps.certmanager-changed.outputs.install == 'true'
        run: |
          kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/$CERTMANAGER_VERSION/cert-manager.crds.yaml
          kubectl create namespace cert-manager

      - name: Installs vault operator CRDs
        if: steps.vault-changed.outputs.install == 'true'
        run: |
          kubectl apply -f https://raw.githubusercontent.com/bank-vaults/vault-operator/main/deploy/charts/vault-operator/crds/crd.yaml

      - name: Installs postgres operator CRDs
        if: steps.postgres-changed.outputs.install == 'true'
        run: |
          kubectl apply -f https://raw.githubusercontent.com/zalando/postgres-operator/master/charts/postgres-operator/crds/postgresqls.yaml

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --target-branch ${{ github.event.repository.default_branch }}




