---
name: test-charts

on:
  push:
    branches:
      - develop

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


jobs:
  test:
    # depending on default permission settings for your org (contents being read-only or read-write for workloads), you will have to add permissions
    # see: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3
        env:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          check-latest: true

      - name: Run helm unittest
        run: |
          helm plugin install https://github.com/quintush/helm-unittest
          charts_with_tests=$(find charts/*/tests -mindepth 0 -maxdepth 0 -type d)
          for chart in $charts_iwth_tests
          do
            helm unittest ${chart%/tests}
          done

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.8.0

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --target-branch ${{ github.event.repository.default_branch }}




